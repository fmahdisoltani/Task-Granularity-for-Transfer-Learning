paths:

  videos_folder:  &vidpath /data/resnet152_features/

  checkpoint_folder: /home/farzaneh/PycharmProjects/pytorch-captioning/results/resnet152_metrics

  train_annot: &train_annot /data/20bn-something-something-v2/v2-train.json
  validation_annot: /data/20bn-something-something-v2/v2-validation.json
  test_annot: /data/20bn-something-something-v2/v2-validation.json


pretrained:
  pretrained_folder: /home/farzaneh/PycharmProjects/pytorch-captioning/results/ECCV/ptcap_resnet152
  pretrained_file: model.best

device:
  synchronize_gpu: &sync True
  gpus: &gpus [0, 1]

dataloaders:
  kwargs: {batch_size: 32, num_workers: 8, pin_memory: False}

model:
  type: EncoderDecoder
  encoder: ResNet152RecurrentEncoder
  encoder_args:
  encoder_kwargs:
  decoder: CoupledLSTMDecoder
  decoder_args:
  decoder_kwargs: {embedding_size: 256,
                   hidden_size: 1024,
                   num_lstm_layers: 2,
                   fc_size: 1024}

loss:
  caption_loss: SequenceCrossEntropy
  balanced: False
  w_caption_loss: 0.9

  classif_loss: CrossEntropy
  w_classif_loss: 0.1


optimizer:
  type: &optimizer Adam
  kwargs: {lr: 0.0001}

scheduler:
  type: ReduceLROnPlateau
  kwargs: {factor: 0.1,
           min_lr: 1.0e-6,
           optimizer: *optimizer,
           patience: 2,
           threshold: 1.0e-4}

training:
  num_epochs: 200
  clip_grad:
  teacher_force: True
  verbose: False

validation:
  frequency: 1
  teacher_force: True
  verbose: True

criteria:
  score: classif_accuracy
  higher_is_better: True

targets:
  caption_type: label

tokenizer:
  kwargs: {user_maxlen: 13, cutoff: 5}

logging:
  verbose: True
  tensorboard_frequency: 1000

dataset:
  train_dataset_type: NumpyVideoDataset
  train_dataset_kwargs:
  val_dataset_type: NumpyVideoDataset
  val_dataset_kwargs:

preprocess:
  train_prep_type: FixedSizeCrop1D
  train_prep_kwargs: {cropsize: 48}
  val_prep_type: FixedSizeCrop1D
  val_prep_kwargs: {cropsize: 48}

